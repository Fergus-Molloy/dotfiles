# A valid snippet should starts with:
#
#		snippet trigger_word [ "description" [ options ] ]
#
# and end with:
#
#		endsnippet
#
# Snippet options:
#
#		b - Beginning of line.
#		i - In-word expansion.
#		w - Word boundary.
#		r - Regular expression
#		e - Custom context snippet
#		A - Snippet will be triggered automatically, when condition matches.
#
# Basic example:
#
#		snippet emitter "emitter properties" b
#		private readonly ${1} = new Emitter<$2>()
#		public readonly ${1/^_(.*)/$1/}: Event<$2> = this.$1.event
#		endsnippet
#
# Online reference: https://github.com/SirVer/ultisnips/blob/master/doc/UltiSnips.txt
#global !p
#def isMath():
#    # DEBUGGING
#    synstack = vim.eval("map(synstack(line('.'), col('.') - (col('.')>=2 ? 1 : 0)), {i,v -> synIDattr(v, 'name')})")
#    print("synstack: " + str(synstack))
#    syntaxgroup = vim.eval("get(reverse(map(synstack(line('.'), col('.') - (col('.')>=2 ? 1 : 0)), {i,v -> synIDattr(v, 'name')})), 0, '')")
#    print("syntaxgroup (rev): "+ syntaxgroup)
#    # MODIFICATION reverse() is not necessary since texMathZone is the outer group anyway.
#    syntaxgroup = vim.eval("get(map(synstack(line('.'), col('.') - (col('.')>=2 ? 1 : 0)), {i,v -> synIDattr(v, 'name')}), 0, '')")
#    print("syntaxgroup: "+ syntaxgroup)
#    return int(vim.eval("'"+syntaxgroup+"' =~# 'texMathZone\%(X\|Y\|V\)'"))
#
#endglobal

snippet doc "Setup Document" b
\documentclass[12pt]{report}
%better maths
\usepackage[fleqn]{amsmath}
\usepackage{amssymb}
\usepackage{cancel}
%embed images
\usepackage{graphicx}
%code blocks
\usepackage{minted}

\newtheorem{theorem}{Theorem}
\newtheorem{lemma}{Lemma}
\newtheorem{proof}{Proof}

% remove numbers from sections
\setcounter{secnumdepth}{0}

\author{Fergus Molloy}
\date{\today}
\title{$1}
\begin{document}
\sffamily
\maketitle
\tableofcontents
\pagebreak
$0
\end{document}
endsnippet

snippet bf "bold text" i
\textbf{${1:${VISUAL}}}$0
endsnippet

snippet it "italic text" i
\emph{${1:${VISUAL}}}$0
endsnippet

snippet ul "Under line text" i
\underline{$1}$0
endsnippet

snippet : "create unordered list on next line" i
:
\begin{itemize}
	\item $0
\end{itemize}

endsnippet

snippet list "create unordered list" b
\begin{itemize}
	\item $0
\end{itemize}

endsnippet

snippet list "create unordered list on next line" i
.
\begin{itemize}
	\item $0
\end{itemize}

endsnippet

snippet olist "create ordered list" b
\begin{enumerate}
	\item $0
\end{enumerate}

endsnippet

snippet item "insert new item" w

\item $0
endsnippet

snippet im "enter inline math" i
$${1:${VISUAL}}$$0
endsnippet

snippet mm "enter block math" b
$$
${0:${VISUAL}}
$$
endsnippet

snippet ^ "create super script" A
^{${1:${VISUAL}}}$0
endsnippet

snippet _ "create sub script" A
_{${1:${VISUAL}}}$0
endsnippet

snippet // "insert fraction" i
\frac{$1}{$2}$0
endsnippet

snippet <= "insert leq" i
\leq
endsnippet

snippet >= "insert geq" i
\geq
endsnippet

snippet != "insert neq" i
\neq
endsnippet

#context "isMath()"
#snippet -> "right arrow" iA
#\rightarrow
#endsnippet

#context "isNotMath()"
snippet -> "right arrow" i
$\rightarrow$$0
endsnippet

snippet img "insert image" b
\begin{center}
	\includegraphics[width=\linewidth]{"./imgs$0"}
\end{center}
endsnippet

snippet sec "Create new section" b
\section{${1:${VISUAL}}}
$0
endsnippet

snippet sub "Create subsection" b
\subsection{${1:${VISUAL}}}
$0
endsnippet

snippet subsub "Create subsubsection" b
\subsubsection{${1:${VISUAL}}}
$0
endsnippet

snippet beg "start new environment" b
\begin{${1:${VISUAL}}}
$0
\end{${1:${VISUAL}}}

endsnippet

snippet nl "make new line" i
.\\\\
$0
endsnippet

snippet code "Enter code block" b
\begin{minted}{$1}
$0
\end{minted}

endsnippet

snippet ic "Inline code" 
\mintinline{$1}|${2:${VISUAL}}|$0
endsnippet

snippet table "Insert a table" b
\begin{tabular}{$1}
$0
\end{tabular}
endsnippet

#snippet A* "format A* properly" iA
#A$^*$
#endsnippet

snippet f-value "format f-value correctly" wA
$f$-value
endsnippet

snippet tt "Enter text mode" i
\text{$1}$0
endsnippet

snippet inp "inport code file" b
\inputminted{$1}{$2}
$0
endsnippet

snippet ; "Description" i
;$1[$2,$3]$0
endsnippet

snippet box "Insert a box" b
\boxed{
$0
}
endsnippet

snippet mbox "Insert matrix box" b
\boxed{
\begin{matrix}
$0
\end{matrix}
}
endsnippet

snippet \\ "new line" iA
\\\\
$0
endsnippet

snippet maths "Enter aligned maths mode" b
\begin{align*}
$0
\end{align*}
endsnippet

snippet frac "create fraction" i
\dfrac{$1}{$2}$0
endsnippet

snippet { "insert left" i
\left\\{
endsnippet

snippet } "insert left" i
\right\\}
endsnippet

snippet eeq "epsilon equilibrium" w
$\mathcal{E}$ equilibrium
endsnippet

snippet schema "create a fuzz schema" b
\begin{schema}{$1}
	$2
${3:\where}
	$0
\end{schema}
endsnippet

snippet fuzz "Setup fuzz Document" b
\documentclass[12pt]{report}
\usepackage{fuzz}
% remove numbers from sections
\setcounter{secnumdepth}{0}

\author{Fergus Molloy}
\date{\today}
\title{$1}
\begin{document}
\sffamily
\maketitle
$0
\end{document}
endsnippet

snippet zed "Create zed environment" b
\begin{zed}
	$0
\end{zed}
endsnippet

snippet axiome "Create axiome environment" b
\begin{axdef}
	$0
\end{axdef}
endsnippet

snippet syntax "Create syntax environment" b
\begin{syntax}
	$0
\end{syntax}
endsnippet
