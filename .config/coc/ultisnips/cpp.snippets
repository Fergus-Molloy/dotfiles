# A valid snippet should starts with:
#
#		snippet trigger_word [ "description" [ options ] ]
#
# and end with:
#
#		endsnippet
#
# Snippet options:
#
#		b - Beginning of line.
#		i - In-word expansion.
#		w - Word boundary.
#		r - Regular expression
#		e - Custom context snippet
#		A - Snippet will be triggered automatically, when condition matches.
#
# Basic example:
#
#		snippet emitter "emitter properties" b
#		private readonly ${1} = new Emitter<$2>()
#		public readonly ${1/^_(.*)/$1/}: Event<$2> = this.$1.event
#		endsnippet
#
# Online reference: https://github.com/SirVer/ultisnips/blob/master/doc/UltiSnips.txt
snippet main "create main method" b
int main(int argc, char *argv[]){
	$0
	return 0;
}
endsnippet

snippet fun "create new function" b
${2:return} ${1:fun_name}(${3:args}) {
	$0
}
endsnippet

snippet vector "std::vector (v)" i
std::vector<${1:char}> v$0;
endsnippet

snippet for "for loop (for)"
for (auto ${2:i} = 0; $2 < ${1:count}; ${3:$2++}) {
	${VISUAL}$0
}
endsnippet

snippet if "If statement (if)"
if (${1}) {
	${VISUAL:default}$0
}
endsnippet

snippet eli "else if .. (eli)"
else if (${1:/* condition */}) {
	${VISUAL}$0
}
endsnippet

snippet fund "function declaration" b
${1:void} ${2:function_name}($3);
endsnippet

snippet print "print some stuff" b
std::cout << $0 << std::endl;
endsnippet
